@using Orchard.ContentManagement
@using Orchard.Utility.Extensions
@using Orchard.ContentManagement.Aspects;
@{
    ContentItem customForm = Model.ContentItem;
    string returnUrl = Model.ReturnUrl;
    var metadata = customForm.ContentManager.GetItemMetadata(customForm);
    var displayText = metadata != null ? MvcHtmlString.Create(metadata.DisplayText) : null;

    Html.AddPageClassNames("edit-" + customForm.ContentType.HtmlClassify());

    // remove default Save/Publish buttons
    Model.Zones["Sidebar"].Items.Clear();

    var submitButtonText = String.IsNullOrEmpty(Model.ContentItem.CustomFormPart.SubmitButtonText) ? T("Submit").Text : Model.ContentItem.CustomFormPart.SubmitButtonText;
}

<div class="col-xs-9">

    @Display(New.Parts_Title().Title(displayText))

    @using (Html.BeginFormAntiForgeryPost(returnUrl, FormMethod.Post, new { role = "form", id = "cform" }))
    {
        @Html.ValidationSummary()
        // Model is a Shape, calling Display() so that it is rendered using the most specific template for its Shape type
        @Display(Model)

        <div class="form-group">
            <button type="submit" name="submit.Save" value="submit.Save" class="btn btn-default" style="margin-top:1em;">@T("Submit")</button>
        </div>
    }
</div>

